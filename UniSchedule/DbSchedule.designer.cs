#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UniSchedule
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Schedule2")]
	public partial class DbScheduleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttbClassroom(tbClassroom instance);
    partial void UpdatetbClassroom(tbClassroom instance);
    partial void DeletetbClassroom(tbClassroom instance);
    partial void InserttbDegree(tbDegree instance);
    partial void UpdatetbDegree(tbDegree instance);
    partial void DeletetbDegree(tbDegree instance);
    partial void InserttbFieldsOfStudy(tbFieldsOfStudy instance);
    partial void UpdatetbFieldsOfStudy(tbFieldsOfStudy instance);
    partial void DeletetbFieldsOfStudy(tbFieldsOfStudy instance);
    partial void InserttbFloor(tbFloor instance);
    partial void UpdatetbFloor(tbFloor instance);
    partial void DeletetbFloor(tbFloor instance);
    partial void InserttbGroup(tbGroup instance);
    partial void UpdatetbGroup(tbGroup instance);
    partial void DeletetbGroup(tbGroup instance);
    partial void InserttbHour(tbHour instance);
    partial void UpdatetbHour(tbHour instance);
    partial void DeletetbHour(tbHour instance);
    partial void InserttbInstructor(tbInstructor instance);
    partial void UpdatetbInstructor(tbInstructor instance);
    partial void DeletetbInstructor(tbInstructor instance);
    partial void InserttbMeeting(tbMeeting instance);
    partial void UpdatetbMeeting(tbMeeting instance);
    partial void DeletetbMeeting(tbMeeting instance);
    partial void InserttbSchedule(tbSchedule instance);
    partial void UpdatetbSchedule(tbSchedule instance);
    partial void DeletetbSchedule(tbSchedule instance);
    partial void InserttbSubject(tbSubject instance);
    partial void UpdatetbSubject(tbSubject instance);
    partial void DeletetbSubject(tbSubject instance);
    partial void InserttbSubjectsInstructor(tbSubjectsInstructor instance);
    partial void UpdatetbSubjectsInstructor(tbSubjectsInstructor instance);
    partial void DeletetbSubjectsInstructor(tbSubjectsInstructor instance);
    partial void InserttbTypesClassroom(tbTypesClassroom instance);
    partial void UpdatetbTypesClassroom(tbTypesClassroom instance);
    partial void DeletetbTypesClassroom(tbTypesClassroom instance);
    partial void InserttbTypesSubject(tbTypesSubject instance);
    partial void UpdatetbTypesSubject(tbTypesSubject instance);
    partial void DeletetbTypesSubject(tbTypesSubject instance);
    partial void InserttbYearOfStudy(tbYearOfStudy instance);
    partial void UpdatetbYearOfStudy(tbYearOfStudy instance);
    partial void DeletetbYearOfStudy(tbYearOfStudy instance);
    #endregion
		
		public DbScheduleDataContext() : 
				base(global::UniSchedule.Properties.Settings.Default.Schedule2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbScheduleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbScheduleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbScheduleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbScheduleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbClassroom> tbClassrooms
		{
			get
			{
				return this.GetTable<tbClassroom>();
			}
		}
		
		public System.Data.Linq.Table<tbDegree> tbDegrees
		{
			get
			{
				return this.GetTable<tbDegree>();
			}
		}
		
		public System.Data.Linq.Table<tbFieldsOfStudy> tbFieldsOfStudies
		{
			get
			{
				return this.GetTable<tbFieldsOfStudy>();
			}
		}
		
		public System.Data.Linq.Table<tbFloor> tbFloors
		{
			get
			{
				return this.GetTable<tbFloor>();
			}
		}
		
		public System.Data.Linq.Table<tbGroup> tbGroups
		{
			get
			{
				return this.GetTable<tbGroup>();
			}
		}
		
		public System.Data.Linq.Table<tbHour> tbHours
		{
			get
			{
				return this.GetTable<tbHour>();
			}
		}
		
		public System.Data.Linq.Table<tbInstructor> tbInstructors
		{
			get
			{
				return this.GetTable<tbInstructor>();
			}
		}
		
		public System.Data.Linq.Table<tbMeeting> tbMeetings
		{
			get
			{
				return this.GetTable<tbMeeting>();
			}
		}
		
		public System.Data.Linq.Table<tbSchedule> tbSchedules
		{
			get
			{
				return this.GetTable<tbSchedule>();
			}
		}
		
		public System.Data.Linq.Table<tbSubject> tbSubjects
		{
			get
			{
				return this.GetTable<tbSubject>();
			}
		}
		
		public System.Data.Linq.Table<tbSubjectsInstructor> tbSubjectsInstructors
		{
			get
			{
				return this.GetTable<tbSubjectsInstructor>();
			}
		}
		
		public System.Data.Linq.Table<tbTypesClassroom> tbTypesClassrooms
		{
			get
			{
				return this.GetTable<tbTypesClassroom>();
			}
		}
		
		public System.Data.Linq.Table<tbTypesSubject> tbTypesSubjects
		{
			get
			{
				return this.GetTable<tbTypesSubject>();
			}
		}
		
		public System.Data.Linq.Table<tbYearOfStudy> tbYearOfStudies
		{
			get
			{
				return this.GetTable<tbYearOfStudy>();
			}
		}
		
		public System.Data.Linq.Table<SubIn> SubIns
		{
			get
			{
				return this.GetTable<SubIn>();
			}
		}
		
		public System.Data.Linq.Table<ViewInstructor> ViewInstructors
		{
			get
			{
				return this.GetTable<ViewInstructor>();
			}
		}
		
		public System.Data.Linq.Table<ViewSubjectInstructor> ViewSubjectInstructors
		{
			get
			{
				return this.GetTable<ViewSubjectInstructor>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddDateMeetings")]
		public int AddDateMeetings([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdGroups", DbType="Int")] System.Nullable<int> idGroups, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdSchedule", DbType="Int")] System.Nullable<int> idSchedule)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date, idGroups, idSchedule);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddNewDegree")]
		public int AddNewDegree([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DegreeLong", DbType="VarChar(50)")] string degreeLong, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DegreeShort", DbType="VarChar(50)")] string degreeShort)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), degreeLong, degreeShort);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddNewGroup")]
		public int AddNewGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NameGroup", DbType="VarChar(1)")] string nameGroup, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdFieldsOfStudy", DbType="Int")] System.Nullable<int> idFieldsOfStudy, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdYearOfStudy", DbType="Int")] System.Nullable<int> idYearOfStudy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nameGroup, idFieldsOfStudy, idYearOfStudy);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddNewInstructors")]
		public int AddNewInstructors([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Surname", DbType="VarChar(50)")] string surname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdDegree", DbType="Int")] System.Nullable<int> idDegree, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OfficeNo", DbType="VarChar(50)")] string officeNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone1", DbType="VarChar(50)")] string phone1, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone2", DbType="VarChar(50)")] string phone2)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, surname, idDegree, officeNo, email, phone1, phone2);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddNewSchedule")]
		public int AddNewSchedule([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassroomId", DbType="Int")] System.Nullable<int> classroomId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupsId", DbType="Int")] System.Nullable<int> groupsId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HoursId", DbType="Int")] System.Nullable<int> hoursId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MeetingsId", DbType="Int")] System.Nullable<int> meetingsId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubInstId", DbType="Int")] System.Nullable<int> subInstId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classroomId, groupsId, hoursId, meetingsId, subInstId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddNewSubject")]
		public int AddNewSubject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LongName", DbType="VarChar(255)")] string longName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShortName", DbType="VarChar(255)")] string shortName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeSubjectId", DbType="Int")] System.Nullable<int> typeSubjectId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), longName, shortName, typeSubjectId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddSubIns")]
		public int AddSubIns([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdSub", DbType="Int")] System.Nullable<int> idSub, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdIns", DbType="Int")] System.Nullable<int> idIns)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idSub, idIns);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteInstructor")]
		public int DeleteInstructor([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(255)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Surname", DbType="VarChar(255)")] string surname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, surname);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteSubject")]
		public int DeleteSubject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LongName", DbType="VarChar(255)")] string longName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShortName", DbType="VarChar(255)")] string shortName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), longName, shortName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchScheduleInstructors")]
		public ISingleResult<SearchScheduleInstructorsResult> SearchScheduleInstructors([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SurnameInstructors", DbType="VarChar(50)")] string surnameInstructors, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateMeetingFrom", DbType="DateTime")] System.Nullable<System.DateTime> dateMeetingFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateMeetingTo", DbType="DateTime")] System.Nullable<System.DateTime> dateMeetingTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LongName", DbType="VarChar(50)")] string longName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Groups", DbType="VarChar(10)")] string groups, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="YearOfStudy", DbType="VarChar(10)")] string yearOfStudy, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FieldsOfStudy", DbType="VarChar(10)")] string fieldsOfStudy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), surnameInstructors, dateMeetingFrom, dateMeetingTo, longName, groups, yearOfStudy, fieldsOfStudy);
			return ((ISingleResult<SearchScheduleInstructorsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbClassroom")]
	public partial class tbClassroom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Number;
		
		private string _NameClass;
		
		private int _Size;
		
		private int _FloorId;
		
		private int _IdTypesClassroom;
		
		private EntitySet<tbSchedule> _tbSchedules;
		
		private EntityRef<tbFloor> _tbFloor;
		
		private EntityRef<tbTypesClassroom> _tbTypesClassroom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnNameClassChanging(string value);
    partial void OnNameClassChanged();
    partial void OnSizeChanging(int value);
    partial void OnSizeChanged();
    partial void OnFloorIdChanging(int value);
    partial void OnFloorIdChanged();
    partial void OnIdTypesClassroomChanging(int value);
    partial void OnIdTypesClassroomChanged();
    #endregion
		
		public tbClassroom()
		{
			this._tbSchedules = new EntitySet<tbSchedule>(new Action<tbSchedule>(this.attach_tbSchedules), new Action<tbSchedule>(this.detach_tbSchedules));
			this._tbFloor = default(EntityRef<tbFloor>);
			this._tbTypesClassroom = default(EntityRef<tbTypesClassroom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameClass", DbType="VarChar(255)")]
		public string NameClass
		{
			get
			{
				return this._NameClass;
			}
			set
			{
				if ((this._NameClass != value))
				{
					this.OnNameClassChanging(value);
					this.SendPropertyChanging();
					this._NameClass = value;
					this.SendPropertyChanged("NameClass");
					this.OnNameClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int NOT NULL")]
		public int Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorId", DbType="Int NOT NULL")]
		public int FloorId
		{
			get
			{
				return this._FloorId;
			}
			set
			{
				if ((this._FloorId != value))
				{
					if (this._tbFloor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFloorIdChanging(value);
					this.SendPropertyChanging();
					this._FloorId = value;
					this.SendPropertyChanged("FloorId");
					this.OnFloorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypesClassroom", DbType="Int NOT NULL")]
		public int IdTypesClassroom
		{
			get
			{
				return this._IdTypesClassroom;
			}
			set
			{
				if ((this._IdTypesClassroom != value))
				{
					if (this._tbTypesClassroom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypesClassroomChanging(value);
					this.SendPropertyChanging();
					this._IdTypesClassroom = value;
					this.SendPropertyChanged("IdTypesClassroom");
					this.OnIdTypesClassroomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbClassroom_tbSchedule", Storage="_tbSchedules", ThisKey="id", OtherKey="ClassroomId")]
		public EntitySet<tbSchedule> tbSchedules
		{
			get
			{
				return this._tbSchedules;
			}
			set
			{
				this._tbSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbFloor_tbClassroom", Storage="_tbFloor", ThisKey="FloorId", OtherKey="id", IsForeignKey=true)]
		public tbFloor tbFloor
		{
			get
			{
				return this._tbFloor.Entity;
			}
			set
			{
				tbFloor previousValue = this._tbFloor.Entity;
				if (((previousValue != value) 
							|| (this._tbFloor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbFloor.Entity = null;
						previousValue.tbClassrooms.Remove(this);
					}
					this._tbFloor.Entity = value;
					if ((value != null))
					{
						value.tbClassrooms.Add(this);
						this._FloorId = value.id;
					}
					else
					{
						this._FloorId = default(int);
					}
					this.SendPropertyChanged("tbFloor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbTypesClassroom_tbClassroom", Storage="_tbTypesClassroom", ThisKey="IdTypesClassroom", OtherKey="id", IsForeignKey=true)]
		public tbTypesClassroom tbTypesClassroom
		{
			get
			{
				return this._tbTypesClassroom.Entity;
			}
			set
			{
				tbTypesClassroom previousValue = this._tbTypesClassroom.Entity;
				if (((previousValue != value) 
							|| (this._tbTypesClassroom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbTypesClassroom.Entity = null;
						previousValue.tbClassrooms.Remove(this);
					}
					this._tbTypesClassroom.Entity = value;
					if ((value != null))
					{
						value.tbClassrooms.Add(this);
						this._IdTypesClassroom = value.id;
					}
					else
					{
						this._IdTypesClassroom = default(int);
					}
					this.SendPropertyChanged("tbTypesClassroom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbSchedules(tbSchedule entity)
		{
			this.SendPropertyChanging();
			entity.tbClassroom = this;
		}
		
		private void detach_tbSchedules(tbSchedule entity)
		{
			this.SendPropertyChanging();
			entity.tbClassroom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbDegree")]
	public partial class tbDegree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _DegreeLong;
		
		private string _DegreeShort;
		
		private EntitySet<tbInstructor> _tbInstructors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDegreeLongChanging(string value);
    partial void OnDegreeLongChanged();
    partial void OnDegreeShortChanging(string value);
    partial void OnDegreeShortChanged();
    #endregion
		
		public tbDegree()
		{
			this._tbInstructors = new EntitySet<tbInstructor>(new Action<tbInstructor>(this.attach_tbInstructors), new Action<tbInstructor>(this.detach_tbInstructors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegreeLong", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DegreeLong
		{
			get
			{
				return this._DegreeLong;
			}
			set
			{
				if ((this._DegreeLong != value))
				{
					this.OnDegreeLongChanging(value);
					this.SendPropertyChanging();
					this._DegreeLong = value;
					this.SendPropertyChanged("DegreeLong");
					this.OnDegreeLongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegreeShort", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DegreeShort
		{
			get
			{
				return this._DegreeShort;
			}
			set
			{
				if ((this._DegreeShort != value))
				{
					this.OnDegreeShortChanging(value);
					this.SendPropertyChanging();
					this._DegreeShort = value;
					this.SendPropertyChanged("DegreeShort");
					this.OnDegreeShortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbDegree_tbInstructor", Storage="_tbInstructors", ThisKey="id", OtherKey="IdDegree")]
		public EntitySet<tbInstructor> tbInstructors
		{
			get
			{
				return this._tbInstructors;
			}
			set
			{
				this._tbInstructors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbInstructors(tbInstructor entity)
		{
			this.SendPropertyChanging();
			entity.tbDegree = this;
		}
		
		private void detach_tbInstructors(tbInstructor entity)
		{
			this.SendPropertyChanging();
			entity.tbDegree = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbFieldsOfStudy")]
	public partial class tbFieldsOfStudy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private EntitySet<tbGroup> _tbGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tbFieldsOfStudy()
		{
			this._tbGroups = new EntitySet<tbGroup>(new Action<tbGroup>(this.attach_tbGroups), new Action<tbGroup>(this.detach_tbGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbFieldsOfStudy_tbGroup", Storage="_tbGroups", ThisKey="id", OtherKey="IdFieldsOfStudy")]
		public EntitySet<tbGroup> tbGroups
		{
			get
			{
				return this._tbGroups;
			}
			set
			{
				this._tbGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbGroups(tbGroup entity)
		{
			this.SendPropertyChanging();
			entity.tbFieldsOfStudy = this;
		}
		
		private void detach_tbGroups(tbGroup entity)
		{
			this.SendPropertyChanging();
			entity.tbFieldsOfStudy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbFloor")]
	public partial class tbFloor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _Floor_;
		
		private string _NameFloor;
		
		private EntitySet<tbClassroom> _tbClassrooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnFloor_Changing(int value);
    partial void OnFloor_Changed();
    partial void OnNameFloorChanging(string value);
    partial void OnNameFloorChanged();
    #endregion
		
		public tbFloor()
		{
			this._tbClassrooms = new EntitySet<tbClassroom>(new Action<tbClassroom>(this.attach_tbClassrooms), new Action<tbClassroom>(this.detach_tbClassrooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor_", DbType="Int NOT NULL")]
		public int Floor_
		{
			get
			{
				return this._Floor_;
			}
			set
			{
				if ((this._Floor_ != value))
				{
					this.OnFloor_Changing(value);
					this.SendPropertyChanging();
					this._Floor_ = value;
					this.SendPropertyChanged("Floor_");
					this.OnFloor_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFloor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NameFloor
		{
			get
			{
				return this._NameFloor;
			}
			set
			{
				if ((this._NameFloor != value))
				{
					this.OnNameFloorChanging(value);
					this.SendPropertyChanging();
					this._NameFloor = value;
					this.SendPropertyChanged("NameFloor");
					this.OnNameFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbFloor_tbClassroom", Storage="_tbClassrooms", ThisKey="id", OtherKey="FloorId")]
		public EntitySet<tbClassroom> tbClassrooms
		{
			get
			{
				return this._tbClassrooms;
			}
			set
			{
				this._tbClassrooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbClassrooms(tbClassroom entity)
		{
			this.SendPropertyChanging();
			entity.tbFloor = this;
		}
		
		private void detach_tbClassrooms(tbClassroom entity)
		{
			this.SendPropertyChanging();
			entity.tbFloor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbGroups")]
	public partial class tbGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _NameGroups;
		
		private int _IdFieldsOfStudy;
		
		private int _IdYearOfStudy;
		
		private EntitySet<tbSchedule> _tbSchedules;
		
		private EntityRef<tbFieldsOfStudy> _tbFieldsOfStudy;
		
		private EntityRef<tbYearOfStudy> _tbYearOfStudy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameGroupsChanging(string value);
    partial void OnNameGroupsChanged();
    partial void OnIdFieldsOfStudyChanging(int value);
    partial void OnIdFieldsOfStudyChanged();
    partial void OnIdYearOfStudyChanging(int value);
    partial void OnIdYearOfStudyChanged();
    #endregion
		
		public tbGroup()
		{
			this._tbSchedules = new EntitySet<tbSchedule>(new Action<tbSchedule>(this.attach_tbSchedules), new Action<tbSchedule>(this.detach_tbSchedules));
			this._tbFieldsOfStudy = default(EntityRef<tbFieldsOfStudy>);
			this._tbYearOfStudy = default(EntityRef<tbYearOfStudy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameGroups", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NameGroups
		{
			get
			{
				return this._NameGroups;
			}
			set
			{
				if ((this._NameGroups != value))
				{
					this.OnNameGroupsChanging(value);
					this.SendPropertyChanging();
					this._NameGroups = value;
					this.SendPropertyChanged("NameGroups");
					this.OnNameGroupsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFieldsOfStudy", DbType="Int NOT NULL")]
		public int IdFieldsOfStudy
		{
			get
			{
				return this._IdFieldsOfStudy;
			}
			set
			{
				if ((this._IdFieldsOfStudy != value))
				{
					if (this._tbFieldsOfStudy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFieldsOfStudyChanging(value);
					this.SendPropertyChanging();
					this._IdFieldsOfStudy = value;
					this.SendPropertyChanged("IdFieldsOfStudy");
					this.OnIdFieldsOfStudyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdYearOfStudy", DbType="Int NOT NULL")]
		public int IdYearOfStudy
		{
			get
			{
				return this._IdYearOfStudy;
			}
			set
			{
				if ((this._IdYearOfStudy != value))
				{
					if (this._tbYearOfStudy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdYearOfStudyChanging(value);
					this.SendPropertyChanging();
					this._IdYearOfStudy = value;
					this.SendPropertyChanged("IdYearOfStudy");
					this.OnIdYearOfStudyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGroup_tbSchedule", Storage="_tbSchedules", ThisKey="id", OtherKey="GroupsId")]
		public EntitySet<tbSchedule> tbSchedules
		{
			get
			{
				return this._tbSchedules;
			}
			set
			{
				this._tbSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbFieldsOfStudy_tbGroup", Storage="_tbFieldsOfStudy", ThisKey="IdFieldsOfStudy", OtherKey="id", IsForeignKey=true)]
		public tbFieldsOfStudy tbFieldsOfStudy
		{
			get
			{
				return this._tbFieldsOfStudy.Entity;
			}
			set
			{
				tbFieldsOfStudy previousValue = this._tbFieldsOfStudy.Entity;
				if (((previousValue != value) 
							|| (this._tbFieldsOfStudy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbFieldsOfStudy.Entity = null;
						previousValue.tbGroups.Remove(this);
					}
					this._tbFieldsOfStudy.Entity = value;
					if ((value != null))
					{
						value.tbGroups.Add(this);
						this._IdFieldsOfStudy = value.id;
					}
					else
					{
						this._IdFieldsOfStudy = default(int);
					}
					this.SendPropertyChanged("tbFieldsOfStudy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbYearOfStudy_tbGroup", Storage="_tbYearOfStudy", ThisKey="IdYearOfStudy", OtherKey="id", IsForeignKey=true)]
		public tbYearOfStudy tbYearOfStudy
		{
			get
			{
				return this._tbYearOfStudy.Entity;
			}
			set
			{
				tbYearOfStudy previousValue = this._tbYearOfStudy.Entity;
				if (((previousValue != value) 
							|| (this._tbYearOfStudy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbYearOfStudy.Entity = null;
						previousValue.tbGroups.Remove(this);
					}
					this._tbYearOfStudy.Entity = value;
					if ((value != null))
					{
						value.tbGroups.Add(this);
						this._IdYearOfStudy = value.id;
					}
					else
					{
						this._IdYearOfStudy = default(int);
					}
					this.SendPropertyChanged("tbYearOfStudy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbSchedules(tbSchedule entity)
		{
			this.SendPropertyChanging();
			entity.tbGroup = this;
		}
		
		private void detach_tbSchedules(tbSchedule entity)
		{
			this.SendPropertyChanging();
			entity.tbGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbHours")]
	public partial class tbHour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Hours_;
		
		private EntitySet<tbSchedule> _tbSchedules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnHours_Changing(string value);
    partial void OnHours_Changed();
    #endregion
		
		public tbHour()
		{
			this._tbSchedules = new EntitySet<tbSchedule>(new Action<tbSchedule>(this.attach_tbSchedules), new Action<tbSchedule>(this.detach_tbSchedules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours_", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Hours_
		{
			get
			{
				return this._Hours_;
			}
			set
			{
				if ((this._Hours_ != value))
				{
					this.OnHours_Changing(value);
					this.SendPropertyChanging();
					this._Hours_ = value;
					this.SendPropertyChanged("Hours_");
					this.OnHours_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbHour_tbSchedule", Storage="_tbSchedules", ThisKey="id", OtherKey="HoursId")]
		public EntitySet<tbSchedule> tbSchedules
		{
			get
			{
				return this._tbSchedules;
			}
			set
			{
				this._tbSchedules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbSchedules(tbSchedule entity)
		{
			this.SendPropertyChanging();
			entity.tbHour = this;
		}
		
		private void detach_tbSchedules(tbSchedule entity)
		{
			this.SendPropertyChanging();
			entity.tbHour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbInstructors")]
	public partial class tbInstructor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private string _Surname;
		
		private int _IdDegree;
		
		private int _OfficeNo;
		
		private string _Email;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private EntitySet<tbSubjectsInstructor> _tbSubjectsInstructors;
		
		private EntityRef<tbDegree> _tbDegree;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnIdDegreeChanging(int value);
    partial void OnIdDegreeChanged();
    partial void OnOfficeNoChanging(int value);
    partial void OnOfficeNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    #endregion
		
		public tbInstructor()
		{
			this._tbSubjectsInstructors = new EntitySet<tbSubjectsInstructor>(new Action<tbSubjectsInstructor>(this.attach_tbSubjectsInstructors), new Action<tbSubjectsInstructor>(this.detach_tbSubjectsInstructors));
			this._tbDegree = default(EntityRef<tbDegree>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDegree", DbType="Int NOT NULL")]
		public int IdDegree
		{
			get
			{
				return this._IdDegree;
			}
			set
			{
				if ((this._IdDegree != value))
				{
					if (this._tbDegree.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDegreeChanging(value);
					this.SendPropertyChanging();
					this._IdDegree = value;
					this.SendPropertyChanged("IdDegree");
					this.OnIdDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeNo", DbType="Int NOT NULL")]
		public int OfficeNo
		{
			get
			{
				return this._OfficeNo;
			}
			set
			{
				if ((this._OfficeNo != value))
				{
					this.OnOfficeNoChanging(value);
					this.SendPropertyChanging();
					this._OfficeNo = value;
					this.SendPropertyChanged("OfficeNo");
					this.OnOfficeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="VarChar(255)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="VarChar(255)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbInstructor_tbSubjectsInstructor", Storage="_tbSubjectsInstructors", ThisKey="id", OtherKey="IdInst")]
		public EntitySet<tbSubjectsInstructor> tbSubjectsInstructors
		{
			get
			{
				return this._tbSubjectsInstructors;
			}
			set
			{
				this._tbSubjectsInstructors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbDegree_tbInstructor", Storage="_tbDegree", ThisKey="IdDegree", OtherKey="id", IsForeignKey=true)]
		public tbDegree tbDegree
		{
			get
			{
				return this._tbDegree.Entity;
			}
			set
			{
				tbDegree previousValue = this._tbDegree.Entity;
				if (((previousValue != value) 
							|| (this._tbDegree.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbDegree.Entity = null;
						previousValue.tbInstructors.Remove(this);
					}
					this._tbDegree.Entity = value;
					if ((value != null))
					{
						value.tbInstructors.Add(this);
						this._IdDegree = value.id;
					}
					else
					{
						this._IdDegree = default(int);
					}
					this.SendPropertyChanged("tbDegree");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbSubjectsInstructors(tbSubjectsInstructor entity)
		{
			this.SendPropertyChanging();
			entity.tbInstructor = this;
		}
		
		private void detach_tbSubjectsInstructors(tbSubjectsInstructor entity)
		{
			this.SendPropertyChanging();
			entity.tbInstructor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbMeetings")]
	public partial class tbMeeting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _Date_;
		
		private EntitySet<tbSchedule> _tbSchedules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDate_Changing(System.DateTime value);
    partial void OnDate_Changed();
    #endregion
		
		public tbMeeting()
		{
			this._tbSchedules = new EntitySet<tbSchedule>(new Action<tbSchedule>(this.attach_tbSchedules), new Action<tbSchedule>(this.detach_tbSchedules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_", DbType="DateTime NOT NULL")]
		public System.DateTime Date_
		{
			get
			{
				return this._Date_;
			}
			set
			{
				if ((this._Date_ != value))
				{
					this.OnDate_Changing(value);
					this.SendPropertyChanging();
					this._Date_ = value;
					this.SendPropertyChanged("Date_");
					this.OnDate_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbMeeting_tbSchedule", Storage="_tbSchedules", ThisKey="id", OtherKey="MeetingsId")]
		public EntitySet<tbSchedule> tbSchedules
		{
			get
			{
				return this._tbSchedules;
			}
			set
			{
				this._tbSchedules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbSchedules(tbSchedule entity)
		{
			this.SendPropertyChanging();
			entity.tbMeeting = this;
		}
		
		private void detach_tbSchedules(tbSchedule entity)
		{
			this.SendPropertyChanging();
			entity.tbMeeting = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSchedule")]
	public partial class tbSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _ClassroomId;
		
		private int _GroupsId;
		
		private int _HoursId;
		
		private int _MeetingsId;
		
		private int _SubInstId;
		
		private EntityRef<tbClassroom> _tbClassroom;
		
		private EntityRef<tbGroup> _tbGroup;
		
		private EntityRef<tbHour> _tbHour;
		
		private EntityRef<tbMeeting> _tbMeeting;
		
		private EntityRef<tbSubjectsInstructor> _tbSubjectsInstructor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnClassroomIdChanging(int value);
    partial void OnClassroomIdChanged();
    partial void OnGroupsIdChanging(int value);
    partial void OnGroupsIdChanged();
    partial void OnHoursIdChanging(int value);
    partial void OnHoursIdChanged();
    partial void OnMeetingsIdChanging(int value);
    partial void OnMeetingsIdChanged();
    partial void OnSubInstIdChanging(int value);
    partial void OnSubInstIdChanged();
    #endregion
		
		public tbSchedule()
		{
			this._tbClassroom = default(EntityRef<tbClassroom>);
			this._tbGroup = default(EntityRef<tbGroup>);
			this._tbHour = default(EntityRef<tbHour>);
			this._tbMeeting = default(EntityRef<tbMeeting>);
			this._tbSubjectsInstructor = default(EntityRef<tbSubjectsInstructor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassroomId", DbType="Int NOT NULL")]
		public int ClassroomId
		{
			get
			{
				return this._ClassroomId;
			}
			set
			{
				if ((this._ClassroomId != value))
				{
					if (this._tbClassroom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassroomIdChanging(value);
					this.SendPropertyChanging();
					this._ClassroomId = value;
					this.SendPropertyChanged("ClassroomId");
					this.OnClassroomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupsId", DbType="Int NOT NULL")]
		public int GroupsId
		{
			get
			{
				return this._GroupsId;
			}
			set
			{
				if ((this._GroupsId != value))
				{
					if (this._tbGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupsIdChanging(value);
					this.SendPropertyChanging();
					this._GroupsId = value;
					this.SendPropertyChanged("GroupsId");
					this.OnGroupsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursId", DbType="Int NOT NULL")]
		public int HoursId
		{
			get
			{
				return this._HoursId;
			}
			set
			{
				if ((this._HoursId != value))
				{
					if (this._tbHour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHoursIdChanging(value);
					this.SendPropertyChanging();
					this._HoursId = value;
					this.SendPropertyChanged("HoursId");
					this.OnHoursIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingsId", DbType="Int NOT NULL")]
		public int MeetingsId
		{
			get
			{
				return this._MeetingsId;
			}
			set
			{
				if ((this._MeetingsId != value))
				{
					if (this._tbMeeting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingsIdChanging(value);
					this.SendPropertyChanging();
					this._MeetingsId = value;
					this.SendPropertyChanged("MeetingsId");
					this.OnMeetingsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubInstId", DbType="Int NOT NULL")]
		public int SubInstId
		{
			get
			{
				return this._SubInstId;
			}
			set
			{
				if ((this._SubInstId != value))
				{
					if (this._tbSubjectsInstructor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubInstIdChanging(value);
					this.SendPropertyChanging();
					this._SubInstId = value;
					this.SendPropertyChanged("SubInstId");
					this.OnSubInstIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbClassroom_tbSchedule", Storage="_tbClassroom", ThisKey="ClassroomId", OtherKey="id", IsForeignKey=true)]
		public tbClassroom tbClassroom
		{
			get
			{
				return this._tbClassroom.Entity;
			}
			set
			{
				tbClassroom previousValue = this._tbClassroom.Entity;
				if (((previousValue != value) 
							|| (this._tbClassroom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbClassroom.Entity = null;
						previousValue.tbSchedules.Remove(this);
					}
					this._tbClassroom.Entity = value;
					if ((value != null))
					{
						value.tbSchedules.Add(this);
						this._ClassroomId = value.id;
					}
					else
					{
						this._ClassroomId = default(int);
					}
					this.SendPropertyChanged("tbClassroom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGroup_tbSchedule", Storage="_tbGroup", ThisKey="GroupsId", OtherKey="id", IsForeignKey=true)]
		public tbGroup tbGroup
		{
			get
			{
				return this._tbGroup.Entity;
			}
			set
			{
				tbGroup previousValue = this._tbGroup.Entity;
				if (((previousValue != value) 
							|| (this._tbGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbGroup.Entity = null;
						previousValue.tbSchedules.Remove(this);
					}
					this._tbGroup.Entity = value;
					if ((value != null))
					{
						value.tbSchedules.Add(this);
						this._GroupsId = value.id;
					}
					else
					{
						this._GroupsId = default(int);
					}
					this.SendPropertyChanged("tbGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbHour_tbSchedule", Storage="_tbHour", ThisKey="HoursId", OtherKey="id", IsForeignKey=true)]
		public tbHour tbHour
		{
			get
			{
				return this._tbHour.Entity;
			}
			set
			{
				tbHour previousValue = this._tbHour.Entity;
				if (((previousValue != value) 
							|| (this._tbHour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbHour.Entity = null;
						previousValue.tbSchedules.Remove(this);
					}
					this._tbHour.Entity = value;
					if ((value != null))
					{
						value.tbSchedules.Add(this);
						this._HoursId = value.id;
					}
					else
					{
						this._HoursId = default(int);
					}
					this.SendPropertyChanged("tbHour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbMeeting_tbSchedule", Storage="_tbMeeting", ThisKey="MeetingsId", OtherKey="id", IsForeignKey=true)]
		public tbMeeting tbMeeting
		{
			get
			{
				return this._tbMeeting.Entity;
			}
			set
			{
				tbMeeting previousValue = this._tbMeeting.Entity;
				if (((previousValue != value) 
							|| (this._tbMeeting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbMeeting.Entity = null;
						previousValue.tbSchedules.Remove(this);
					}
					this._tbMeeting.Entity = value;
					if ((value != null))
					{
						value.tbSchedules.Add(this);
						this._MeetingsId = value.id;
					}
					else
					{
						this._MeetingsId = default(int);
					}
					this.SendPropertyChanged("tbMeeting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbSubjectsInstructor_tbSchedule", Storage="_tbSubjectsInstructor", ThisKey="SubInstId", OtherKey="id", IsForeignKey=true)]
		public tbSubjectsInstructor tbSubjectsInstructor
		{
			get
			{
				return this._tbSubjectsInstructor.Entity;
			}
			set
			{
				tbSubjectsInstructor previousValue = this._tbSubjectsInstructor.Entity;
				if (((previousValue != value) 
							|| (this._tbSubjectsInstructor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbSubjectsInstructor.Entity = null;
						previousValue.tbSchedules.Remove(this);
					}
					this._tbSubjectsInstructor.Entity = value;
					if ((value != null))
					{
						value.tbSchedules.Add(this);
						this._SubInstId = value.id;
					}
					else
					{
						this._SubInstId = default(int);
					}
					this.SendPropertyChanged("tbSubjectsInstructor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSubjects")]
	public partial class tbSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _LongName;
		
		private string _ShortName;
		
		private int _TypesSubjectsId;
		
		private EntitySet<tbSubjectsInstructor> _tbSubjectsInstructors;
		
		private EntityRef<tbTypesSubject> _tbTypesSubject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnLongNameChanging(string value);
    partial void OnLongNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnTypesSubjectsIdChanging(int value);
    partial void OnTypesSubjectsIdChanged();
    #endregion
		
		public tbSubject()
		{
			this._tbSubjectsInstructors = new EntitySet<tbSubjectsInstructor>(new Action<tbSubjectsInstructor>(this.attach_tbSubjectsInstructors), new Action<tbSubjectsInstructor>(this.detach_tbSubjectsInstructors));
			this._tbTypesSubject = default(EntityRef<tbTypesSubject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string LongName
		{
			get
			{
				return this._LongName;
			}
			set
			{
				if ((this._LongName != value))
				{
					this.OnLongNameChanging(value);
					this.SendPropertyChanging();
					this._LongName = value;
					this.SendPropertyChanged("LongName");
					this.OnLongNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypesSubjectsId", DbType="Int NOT NULL")]
		public int TypesSubjectsId
		{
			get
			{
				return this._TypesSubjectsId;
			}
			set
			{
				if ((this._TypesSubjectsId != value))
				{
					if (this._tbTypesSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypesSubjectsIdChanging(value);
					this.SendPropertyChanging();
					this._TypesSubjectsId = value;
					this.SendPropertyChanged("TypesSubjectsId");
					this.OnTypesSubjectsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbSubject_tbSubjectsInstructor", Storage="_tbSubjectsInstructors", ThisKey="id", OtherKey="IdSub")]
		public EntitySet<tbSubjectsInstructor> tbSubjectsInstructors
		{
			get
			{
				return this._tbSubjectsInstructors;
			}
			set
			{
				this._tbSubjectsInstructors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbTypesSubject_tbSubject", Storage="_tbTypesSubject", ThisKey="TypesSubjectsId", OtherKey="id", IsForeignKey=true)]
		public tbTypesSubject tbTypesSubject
		{
			get
			{
				return this._tbTypesSubject.Entity;
			}
			set
			{
				tbTypesSubject previousValue = this._tbTypesSubject.Entity;
				if (((previousValue != value) 
							|| (this._tbTypesSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbTypesSubject.Entity = null;
						previousValue.tbSubjects.Remove(this);
					}
					this._tbTypesSubject.Entity = value;
					if ((value != null))
					{
						value.tbSubjects.Add(this);
						this._TypesSubjectsId = value.id;
					}
					else
					{
						this._TypesSubjectsId = default(int);
					}
					this.SendPropertyChanged("tbTypesSubject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbSubjectsInstructors(tbSubjectsInstructor entity)
		{
			this.SendPropertyChanging();
			entity.tbSubject = this;
		}
		
		private void detach_tbSubjectsInstructors(tbSubjectsInstructor entity)
		{
			this.SendPropertyChanging();
			entity.tbSubject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSubjectsInstructors")]
	public partial class tbSubjectsInstructor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _IdSub;
		
		private int _IdInst;
		
		private EntitySet<tbSchedule> _tbSchedules;
		
		private EntityRef<tbInstructor> _tbInstructor;
		
		private EntityRef<tbSubject> _tbSubject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnIdSubChanging(int value);
    partial void OnIdSubChanged();
    partial void OnIdInstChanging(int value);
    partial void OnIdInstChanged();
    #endregion
		
		public tbSubjectsInstructor()
		{
			this._tbSchedules = new EntitySet<tbSchedule>(new Action<tbSchedule>(this.attach_tbSchedules), new Action<tbSchedule>(this.detach_tbSchedules));
			this._tbInstructor = default(EntityRef<tbInstructor>);
			this._tbSubject = default(EntityRef<tbSubject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSub", DbType="Int NOT NULL")]
		public int IdSub
		{
			get
			{
				return this._IdSub;
			}
			set
			{
				if ((this._IdSub != value))
				{
					if (this._tbSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSubChanging(value);
					this.SendPropertyChanging();
					this._IdSub = value;
					this.SendPropertyChanged("IdSub");
					this.OnIdSubChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInst", DbType="Int NOT NULL")]
		public int IdInst
		{
			get
			{
				return this._IdInst;
			}
			set
			{
				if ((this._IdInst != value))
				{
					if (this._tbInstructor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdInstChanging(value);
					this.SendPropertyChanging();
					this._IdInst = value;
					this.SendPropertyChanged("IdInst");
					this.OnIdInstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbSubjectsInstructor_tbSchedule", Storage="_tbSchedules", ThisKey="id", OtherKey="SubInstId")]
		public EntitySet<tbSchedule> tbSchedules
		{
			get
			{
				return this._tbSchedules;
			}
			set
			{
				this._tbSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbInstructor_tbSubjectsInstructor", Storage="_tbInstructor", ThisKey="IdInst", OtherKey="id", IsForeignKey=true)]
		public tbInstructor tbInstructor
		{
			get
			{
				return this._tbInstructor.Entity;
			}
			set
			{
				tbInstructor previousValue = this._tbInstructor.Entity;
				if (((previousValue != value) 
							|| (this._tbInstructor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbInstructor.Entity = null;
						previousValue.tbSubjectsInstructors.Remove(this);
					}
					this._tbInstructor.Entity = value;
					if ((value != null))
					{
						value.tbSubjectsInstructors.Add(this);
						this._IdInst = value.id;
					}
					else
					{
						this._IdInst = default(int);
					}
					this.SendPropertyChanged("tbInstructor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbSubject_tbSubjectsInstructor", Storage="_tbSubject", ThisKey="IdSub", OtherKey="id", IsForeignKey=true)]
		public tbSubject tbSubject
		{
			get
			{
				return this._tbSubject.Entity;
			}
			set
			{
				tbSubject previousValue = this._tbSubject.Entity;
				if (((previousValue != value) 
							|| (this._tbSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbSubject.Entity = null;
						previousValue.tbSubjectsInstructors.Remove(this);
					}
					this._tbSubject.Entity = value;
					if ((value != null))
					{
						value.tbSubjectsInstructors.Add(this);
						this._IdSub = value.id;
					}
					else
					{
						this._IdSub = default(int);
					}
					this.SendPropertyChanged("tbSubject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbSchedules(tbSchedule entity)
		{
			this.SendPropertyChanging();
			entity.tbSubjectsInstructor = this;
		}
		
		private void detach_tbSchedules(tbSchedule entity)
		{
			this.SendPropertyChanging();
			entity.tbSubjectsInstructor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbTypesClassroom")]
	public partial class tbTypesClassroom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _NameTypes;
		
		private int _ClassroomId;
		
		private EntitySet<tbClassroom> _tbClassrooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameTypesChanging(string value);
    partial void OnNameTypesChanged();
    partial void OnClassroomIdChanging(int value);
    partial void OnClassroomIdChanged();
    #endregion
		
		public tbTypesClassroom()
		{
			this._tbClassrooms = new EntitySet<tbClassroom>(new Action<tbClassroom>(this.attach_tbClassrooms), new Action<tbClassroom>(this.detach_tbClassrooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTypes", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NameTypes
		{
			get
			{
				return this._NameTypes;
			}
			set
			{
				if ((this._NameTypes != value))
				{
					this.OnNameTypesChanging(value);
					this.SendPropertyChanging();
					this._NameTypes = value;
					this.SendPropertyChanged("NameTypes");
					this.OnNameTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassroomId", DbType="Int NOT NULL")]
		public int ClassroomId
		{
			get
			{
				return this._ClassroomId;
			}
			set
			{
				if ((this._ClassroomId != value))
				{
					this.OnClassroomIdChanging(value);
					this.SendPropertyChanging();
					this._ClassroomId = value;
					this.SendPropertyChanged("ClassroomId");
					this.OnClassroomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbTypesClassroom_tbClassroom", Storage="_tbClassrooms", ThisKey="id", OtherKey="IdTypesClassroom")]
		public EntitySet<tbClassroom> tbClassrooms
		{
			get
			{
				return this._tbClassrooms;
			}
			set
			{
				this._tbClassrooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbClassrooms(tbClassroom entity)
		{
			this.SendPropertyChanging();
			entity.tbTypesClassroom = this;
		}
		
		private void detach_tbClassrooms(tbClassroom entity)
		{
			this.SendPropertyChanging();
			entity.tbTypesClassroom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbTypesSubjects")]
	public partial class tbTypesSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _NameTypes;
		
		private EntitySet<tbSubject> _tbSubjects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameTypesChanging(string value);
    partial void OnNameTypesChanged();
    #endregion
		
		public tbTypesSubject()
		{
			this._tbSubjects = new EntitySet<tbSubject>(new Action<tbSubject>(this.attach_tbSubjects), new Action<tbSubject>(this.detach_tbSubjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTypes", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NameTypes
		{
			get
			{
				return this._NameTypes;
			}
			set
			{
				if ((this._NameTypes != value))
				{
					this.OnNameTypesChanging(value);
					this.SendPropertyChanging();
					this._NameTypes = value;
					this.SendPropertyChanged("NameTypes");
					this.OnNameTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbTypesSubject_tbSubject", Storage="_tbSubjects", ThisKey="id", OtherKey="TypesSubjectsId")]
		public EntitySet<tbSubject> tbSubjects
		{
			get
			{
				return this._tbSubjects;
			}
			set
			{
				this._tbSubjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbSubjects(tbSubject entity)
		{
			this.SendPropertyChanging();
			entity.tbTypesSubject = this;
		}
		
		private void detach_tbSubjects(tbSubject entity)
		{
			this.SendPropertyChanging();
			entity.tbTypesSubject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbYearOfStudy")]
	public partial class tbYearOfStudy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _YearOfStudyName;
		
		private EntitySet<tbGroup> _tbGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnYearOfStudyNameChanging(string value);
    partial void OnYearOfStudyNameChanged();
    #endregion
		
		public tbYearOfStudy()
		{
			this._tbGroups = new EntitySet<tbGroup>(new Action<tbGroup>(this.attach_tbGroups), new Action<tbGroup>(this.detach_tbGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfStudyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string YearOfStudyName
		{
			get
			{
				return this._YearOfStudyName;
			}
			set
			{
				if ((this._YearOfStudyName != value))
				{
					this.OnYearOfStudyNameChanging(value);
					this.SendPropertyChanging();
					this._YearOfStudyName = value;
					this.SendPropertyChanged("YearOfStudyName");
					this.OnYearOfStudyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbYearOfStudy_tbGroup", Storage="_tbGroups", ThisKey="id", OtherKey="IdYearOfStudy")]
		public EntitySet<tbGroup> tbGroups
		{
			get
			{
				return this._tbGroups;
			}
			set
			{
				this._tbGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbGroups(tbGroup entity)
		{
			this.SendPropertyChanging();
			entity.tbYearOfStudy = this;
		}
		
		private void detach_tbGroups(tbGroup entity)
		{
			this.SendPropertyChanging();
			entity.tbYearOfStudy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubIns")]
	public partial class SubIn
	{
		
		private string _Surname;
		
		private string _LongName;
		
		private int _TypesSubjectsId;
		
		private string _NameTypes;
		
		public SubIn()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this._Surname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string LongName
		{
			get
			{
				return this._LongName;
			}
			set
			{
				if ((this._LongName != value))
				{
					this._LongName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypesSubjectsId", DbType="Int NOT NULL")]
		public int TypesSubjectsId
		{
			get
			{
				return this._TypesSubjectsId;
			}
			set
			{
				if ((this._TypesSubjectsId != value))
				{
					this._TypesSubjectsId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTypes", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NameTypes
		{
			get
			{
				return this._NameTypes;
			}
			set
			{
				if ((this._NameTypes != value))
				{
					this._NameTypes = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewInstructors")]
	public partial class ViewInstructor
	{
		
		private string _SurnameName;
		
		public ViewInstructor()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurnameName", DbType="VarChar(562) NOT NULL", CanBeNull=false)]
		public string SurnameName
		{
			get
			{
				return this._SurnameName;
			}
			set
			{
				if ((this._SurnameName != value))
				{
					this._SurnameName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewSubjectInstructors")]
	public partial class ViewSubjectInstructor
	{
		
		private string _Subjects_instructor;
		
		private string _LongName;
		
		public ViewSubjectInstructor()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Subjects instructor]", Storage="_Subjects_instructor", DbType="VarChar(562) NOT NULL", CanBeNull=false)]
		public string Subjects_instructor
		{
			get
			{
				return this._Subjects_instructor;
			}
			set
			{
				if ((this._Subjects_instructor != value))
				{
					this._Subjects_instructor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string LongName
		{
			get
			{
				return this._LongName;
			}
			set
			{
				if ((this._LongName != value))
				{
					this._LongName = value;
				}
			}
		}
	}
	
	public partial class SearchScheduleInstructorsResult
	{
		
		private string _Month_;
		
		private string _Day_;
		
		private string _Hours_;
		
		private string _Surname;
		
		private string _NameGroups;
		
		private string _LongName;
		
		private string _Number;
		
		private string _NameTypes;
		
		public SearchScheduleInstructorsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month_", DbType="NVarChar(30)")]
		public string Month_
		{
			get
			{
				return this._Month_;
			}
			set
			{
				if ((this._Month_ != value))
				{
					this._Month_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day_", DbType="NVarChar(30)")]
		public string Day_
		{
			get
			{
				return this._Day_;
			}
			set
			{
				if ((this._Day_ != value))
				{
					this._Day_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours_", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Hours_
		{
			get
			{
				return this._Hours_;
			}
			set
			{
				if ((this._Hours_ != value))
				{
					this._Hours_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this._Surname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameGroups", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NameGroups
		{
			get
			{
				return this._NameGroups;
			}
			set
			{
				if ((this._NameGroups != value))
				{
					this._NameGroups = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string LongName
		{
			get
			{
				return this._LongName;
			}
			set
			{
				if ((this._LongName != value))
				{
					this._LongName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTypes", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NameTypes
		{
			get
			{
				return this._NameTypes;
			}
			set
			{
				if ((this._NameTypes != value))
				{
					this._NameTypes = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
